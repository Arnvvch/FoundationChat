name: Xcode - Build and Analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: macos-15    # macOS 15 runner hosts Xcode 16.x and 26.x betas
    steps:
      - uses: actions/checkout@v4

      - name: Set Xcode 26 beta
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '26.0-beta'

      - name: Verify Xcode version
        run: xcodebuild -version

      - name: Build & Analyze
        env:
          scheme: FoundationChat
          archive_path: archive
        run: |
          scheme=$(xcodebuild -list -json | ruby -e "require 'json'; print JSON.parse(STDIN.read)['project']['targets'][0]")
          filetype=project; file=$(ls *.xcodeproj | head -n1)
          xcodebuild clean build analyze -scheme "$scheme" -$filetype "$file" | xcpretty




      - name: Archive
        env:
          scheme: ${{ steps.scheme.outputs.scheme }}
          filetype_parameter: ${{ steps.filetype_parameter.outputs.filetype_parameter }}
          file_to_build: ${{ steps.file_to_build.outputs.file_to_build }}
        run: xcodebuild archive -archivePath "$archive_path" -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -sdk iphoneos -arch arm64 -configuration Release | xcpretty && exit ${PIPESTATUS[0]}
      - name: Tar Build Artifact
        run: tar -cvf "$archive_path.xcarchive.tar" "$archive_path.xcarchive"
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.archive_path }}.xcarchive.tar
          path: ${{ env.archive_path }}.xcarchive.tar
      - name: Create IPA
        run: |
          mv "$archive_path.xcarchive/Products/Applications" Payload
          zip -r "$scheme.ipa" "Payload" -x "._*" -x ".DS_Store" -x "__MACOSX"
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.scheme }}.ipa
          path: ${{ env.scheme }}.ipa
